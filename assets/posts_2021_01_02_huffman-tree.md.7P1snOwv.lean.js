import{_ as l,o as T,c as a,b as t,d as Q,a as e}from"./chunks/framework.heUNgYAJ.js";const R=JSON.parse('{"title":"哈夫曼树（Huffman Tree）","description":"","frontmatter":{"title":"哈夫曼树（Huffman Tree）","date":"2021-01-02T14:00:00.000Z","updated":"2021-01-02T14:00:00.000Z","categories":["Computer Science","Data Structure","Tree"],"tags":["Data Structure"]},"headers":[{"level":1,"title":"哈夫曼树（Huffman Tree）","slug":"哈夫曼树-huffman-tree","link":"#哈夫曼树-huffman-tree","children":[{"level":2,"title":"构造步骤（贪心）","slug":"构造步骤-贪心","link":"#构造步骤-贪心","children":[]},{"level":2,"title":"储存结构","slug":"储存结构","link":"#储存结构","children":[]},{"level":2,"title":"用途","slug":"用途","link":"#用途","children":[{"level":3,"title":"哈夫曼编码（Huffman Coding）","slug":"哈夫曼编码-huffman-coding","link":"#哈夫曼编码-huffman-coding","children":[{"level":4,"title":"构造步骤","slug":"构造步骤","link":"#构造步骤","children":[]}]}]}]}],"relativePath":"posts/2021/01/02/huffman-tree.md","filePath":"posts/2021/01/02/huffman-tree.md"}'),n={name:"posts/2021/01/02/huffman-tree.md"},s=t("h1",{id:"哈夫曼树-huffman-tree",tabindex:"-1"},[Q("哈夫曼树（Huffman Tree） "),t("a",{class:"header-anchor",href:"#哈夫曼树-huffman-tree","aria-label":'Permalink to "哈夫曼树（Huffman Tree）"'},"​")],-1),o=t("p",null,[t("strong",null,"定义"),Q("：n 个带权叶子结点构成的所有 m 叉树中带权路径长度最短的 m 叉树")],-1),d=t("blockquote",null,[t("p",null,"WPL：带权路径长度（Weighted Path Length）")],-1),m=t("h2",{id:"构造步骤-贪心",tabindex:"-1"},[Q("构造步骤（贪心） "),t("a",{class:"header-anchor",href:"#构造步骤-贪心","aria-label":'Permalink to "构造步骤（贪心）"'},"​")],-1),r=t("strong",null,"初始化",-1),h={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},i={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"14.219ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 6285 1000","aria-hidden":"true"},p=e("",1),c=[p],g=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mo",{fence:"false",stretchy:"false"},"{"),t("msub",null,[t("mi",null,"T"),t("mn",null,"1")]),t("mo",null,","),t("msub",null,[t("mi",null,"T"),t("mn",null,"2")]),t("mo",null,","),t("msub",null,[t("mi",null,"T"),t("mn",null,"3")]),t("mo",null,"."),t("mo",null,"."),t("mo",null,"."),t("mo",{fence:"false",stretchy:"false"},"}")])],-1),u=t("strong",null,"补空节点（二阶哈夫曼树跳过）",-1),H=t("code",null,"(n+k-1)%(m-1)==0",-1),L=t("p",null,"由哈夫曼树只有度为 0 和 m 的节点，又",-1),f={class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},w={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.375ex"},xmlns:"http://www.w3.org/2000/svg",width:"64.951ex",height:"1.881ex",role:"img",focusable:"false",viewBox:"0 -666 28708.6 831.6","aria-hidden":"true"},_=e("",1),V=[_],k=t("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[t("msub",null,[t("mi",null,"n"),t("mn",null,"0")]),t("mo",null,"+"),t("msub",null,[t("mi",null,"n"),t("mn",null,"1")]),t("mo",null,"+"),t("msub",null,[t("mi",null,"n"),t("mn",null,"2")]),t("mo",null,"+"),t("mo",null,"."),t("mo",null,"."),t("mo",null,"."),t("mo",null,"+"),t("msub",null,[t("mi",null,"n"),t("mi",null,"m")]),t("mo",null,"="),t("mn",null,"0"),t("mo",null,"∗"),t("msub",null,[t("mi",null,"n"),t("mn",null,"0")]),t("mo",null,"+"),t("mn",null,"1"),t("mo",null,"∗"),t("msub",null,[t("mi",null,"n"),t("mn",null,"1")]),t("mo",null,"+"),t("mn",null,"2"),t("mo",null,"∗"),t("msub",null,[t("mi",null,"n"),t("mn",null,"2")]),t("mo",null,"+"),t("mo",null,"."),t("mo",null,"."),t("mo",null,"."),t("mo",null,"+"),t("mi",null,"m"),t("mo",null,"∗"),t("msub",null,[t("mi",null,"n"),t("mi",null,"m")]),t("mo",null,"+"),t("mn",null,"1")])],-1),y=t("p",null,"故：",-1),M={class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},x={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"21.989ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 9719.3 1000","aria-hidden":"true"},b=e("",1),Z=[b],v=t("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[t("msub",null,[t("mi",null,"n"),t("mn",null,"0")]),t("mo",null,"−"),t("mn",null,"1"),t("mo",null,"="),t("mo",{stretchy:"false"},"("),t("mi",null,"m"),t("mo",null,"−"),t("mn",null,"1"),t("mo",{stretchy:"false"},")"),t("mo",null,"∗"),t("msub",null,[t("mi",null,"n"),t("mi",null,"m")])])],-1),D=t("li",null,[t("strong",null,"找最小树"),Q("：在森林中选择根结点权值最小的两棵树，构造新二叉树，根结点权值为左右子树根结点权值之和")],-1),B=t("li",null,[t("strong",null,"删除与加入"),Q("：在森林中删除选中的两棵树，加入新树")],-1),C=t("li",null,[t("strong",null,"判断"),Q("：重复步骤 3、4，直至只剩一棵树，即为哈夫曼树")],-1),S=e("",11);function P(A,E,q,j,I,N){return T(),a("div",null,[s,o,d,m,t("ol",null,[t("li",null,[r,Q("：由 n 个权值构造二叉树森林"),t("mjx-container",h,[(T(),a("svg",i,c)),g])]),t("li",null,[u,Q("：补 k 个空节点，使得"),H,t("blockquote",null,[L,t("mjx-container",f,[(T(),a("svg",w,V)),k]),y,t("mjx-container",M,[(T(),a("svg",x,Z)),v])])]),D,B,C]),S])}const $=l(n,[["render",P]]);export{R as __pageData,$ as default};
